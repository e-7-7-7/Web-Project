// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(cuid())
  username  String     @unique
  password  String
  firstname String
  surname   String?
  customers Customer[]
  sellers   Seller[]
  admins    Admin[]
}

model Admin {
  id     Int  @id @default(autoincrement())
  User   User @relation(fields: [userId], references: [id])
  userId String  @unique
}

model Customer {
  id               Int                @id @default(autoincrement())
  account_Balance  Float
  User             User               @relation(fields: [userId], references: [id])
  userId           String                @unique
  shipping_address Shipping_Address[]
  Transaction      Transaction[]
}

model Shipping_Address {
  id           Int      @id @default(autoincrement())
  country      String
  city         String
  street       String
  house_number String
  Customer     Customer @relation(fields: [customerId], references: [id])
  customerId   Int      @unique
}

model Seller {
  id     Int    @id @default(autoincrement())
  User   User   @relation(fields: [userId], references: [id])
  userId String    @unique
  books  Book[]
}

model Book {
  id            Int           @id @default(autoincrement())
  title         String
  author        String
  price         Float
  description   String?
  genre         String
  quantity      Int
  coverImageUrl String
  isApproved    Boolean       @default(false)
  Seller        Seller        @relation(fields: [sellerId], references: [id])
  sellerId      Int
  transactions   Transaction[]
}

model Transaction {
  id         Int      @id @default(autoincrement())
  amount     Int
  date       DateTime
  Customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  Book       Book     @relation(fields: [bookId], references: [id])
  bookId     Int
}

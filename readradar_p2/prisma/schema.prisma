generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  password  String
  firstname String
  surname   String?
  admins    Admin?
  customers Customer?
  sellers   Seller?
}

model Admin {
  id     Int    @id @default(autoincrement())
  userId String @unique
  User   User   @relation(fields: [userId], references: [id])
}

model Customer {
  id               Int               @id @default(autoincrement())
  account_Balance  Float
  userId           String            @unique
  User             User              @relation(fields: [userId], references: [id])
  shipping_address Shipping_Address?
  Transaction      Transaction[]
}

model Shipping_Address {
  id           Int      @id @default(autoincrement())
  country      String
  city         String
  street       String
  house_number String
  customerId   Int      @unique
  Customer     Customer @relation(fields: [customerId], references: [id])
}

model Seller {
  id     Int    @id @default(autoincrement())
  userId String @unique
  books  Book[]
  User   User   @relation(fields: [userId], references: [id])
}

model Book {
  id            Int           @id @default(autoincrement())
  title         String
  author        String
  price         Float
  description   String?
  genre         String
  quantity      Int
  coverImageUrl String
  isApproved    Boolean       @default(false)
  sellerId      Int
  Seller        Seller        @relation(fields: [sellerId], references: [id])
  transactions  Transaction[]
}

model Transaction {
  id         Int      @id @default(autoincrement())
  amount     Int
  date       DateTime
  customerId Int
  bookId     Int
  Book       Book     @relation(fields: [bookId], references: [id])
  Customer   Customer @relation(fields: [customerId], references: [id])
}
